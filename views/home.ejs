<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdn.jsdelivr.net/npm/tailwindcss@3.4.1/dist/tailwind.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.css" rel="stylesheet" />
    <style>
        .modal-bg {
            backdrop-filter: blur(5px);
            background-color: rgba(0, 0, 0, 0.5);
        }

        .modal-content {
            animation: slideIn 0.3s ease-out;
        }

        @keyframes slideIn {
            from {
                transform: translateY(-20px);
                opacity: 0;
            }

            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        .dropzone-active {
            @apply border-blue-500 bg-blue-50 dark:bg-blue-900/20;
        }

        /* Scrollbar only inside file list container */
        .file-list-container {
            max-height: 60vh;
            overflow-y: auto;
            overflow-x: hidden;
            padding-right: 8px; /* Gap between file boxes and scrollbar */
            margin-right: -8px; /* Compensate for padding to avoid layout shift */
        }

        /* Optional: Custom scrollbar styling */
        .file-list-container::-webkit-scrollbar {
            width: 6px;
        }

        .file-list-container::-webkit-scrollbar-track {
            background: transparent;
        }

        .file-list-container::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 3px;
        }

        .file-list-container::-webkit-scrollbar-thumb:hover {
            background: #94a3b8;
        }

        .dark .file-list-container::-webkit-scrollbar-thumb {
            background: #4b5563;
        }

        .dark .file-list-container::-webkit-scrollbar-thumb:hover {
            background: #6b7280;
        }
    </style>
</head>

<body class="bg-gray-100 dark:bg-gray-900 flex flex-col items-center min-h-screen">

    <header class="w-full bg-white dark:bg-gray-800 shadow-md">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center">
            <!-- Logo and Name -->
            <div class="flex items-center space-x-3">
                <div class="text-3xl font-bold text-blue-600 dark:text-blue-500">MDrive</div>
            </div>

            <!-- Profile Section -->
            <div class="relative">
                <button id="dropdownUserButton" data-dropdown-toggle="dropdownUser"
                    class="flex items-center space-x-2 text-gray-900 dark:text-white bg-white dark:bg-gray-800 rounded-full px-4 py-2 shadow-md hover:bg-gray-100 dark:hover:bg-gray-700 transition duration-300">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                    </svg>
                    <span class="font-medium truncate max-w-[120px]">
                        <%= user.name || 'User' %>
                    </span>
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                </button>
                <!-- Dropdown Menu -->
                <div id="dropdownUser"
                    class="hidden z-50 bg-white dark:bg-gray-800 divide-y divide-gray-100 dark:divide-gray-700 rounded-lg shadow w-56 mt-2 absolute right-0">
                    <div class="px-4 py-3 text-sm text-gray-900 dark:text-white">
                        <div class="font-medium">
                            <%= user.name || 'User' %>
                        </div>
                        <div class="truncate">
                            <%= user.email || 'No email' %>
                        </div>
                    </div>
                    <div class="py-1">
                        <a href="user/logout"
                            class="block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700">Logout</a>
                    </div>
                </div>
            </div>
        </div>
    </header>

 <!-- Header Container for Upload Button and Search -->
<div class="w-full max-w-4xl mx-auto flex flex-col sm:flex-row justify-between items-center mt-8 px-4 gap-4">
    <!-- Upload Button -->
    <button id="openModalBtn" aria-label="Upload new file"
        class="w-full sm:w-auto bg-blue-600 dark:bg-blue-500 text-white font-semibold px-6 py-3 rounded-lg shadow-md hover:bg-blue-700 dark:hover:bg-blue-600 transition duration-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
        Upload File
    </button>

    <!-- Search Bar -->
    <div class="w-full sm:w-auto flex-1 max-w-xs">
        <div class="relative">
            <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                <svg class="w-5 h-5 text-gray-500 dark:text-gray-400" fill="none" stroke="currentColor"
                    viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
            </div>
            <input type="text" id="searchInput"
                class="block w-full pl-10 pr-3 py-3 text-sm text-gray-900 dark:text-white bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 focus:outline-none transition"
                placeholder="Search files...">
        </div>
    </div>
</div>

    <!-- File Display Section -->
    <div class="w-full max-w-4xl mt-6 bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6">
        <h2 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Your Uploaded Files</h2>
        <div id="noFilesMessage"
            class="text-center text-gray-500 dark:text-gray-400 py-4 <%= files.length === 0 ? '' : 'hidden' %>">
            No files uploaded yet.
        </div>
        <div id="noResultsMessage" class="hidden text-center text-gray-500 dark:text-gray-400 py-4">
            No files match your search.
        </div>

        <!-- Scrollable File List Container -->
        <div class="file-list-container mt-3">
            <div class="files flex flex-col gap-2">
                <% files.forEach(file=> { %>
                    <div class="file-item flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition duration-300"
                        data-filename="<%= file.originalname.toLowerCase() %>">
                        <h1 class="text-gray-900 dark:text-white font-medium truncate max-w-[70%]">
                            <%= file.originalname %>
                        </h1>
                        <!-- Download Button Only -->
                        <a href="/download/<%= encodeURIComponent(file.public_id) %>" download="<%= file.originalname %>"
                            class="flex items-center gap-2 text-blue-600 dark:text-blue-500 hover:text-blue-700 dark:hover:text-blue-600 transition duration-300">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                                xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
                            </svg>
                            Download
                        </a>
                    </div>
                    <% }) %>
            </div>
        </div>
    </div>

    <!-- Modal (Hidden by default) -->
    <div id="uploadModal" class="fixed inset-0 flex items-center justify-center z-50 hidden modal-bg">
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-lg p-6 relative modal-content">
            <!-- Close Button -->
            <button id="closeModalBtn"
                class="absolute top-0 right-0 -mr-6 -mt-6 text-gray-500 dark:text-gray-300 hover:text-gray-700 dark:hover:text-gray-100">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12">
                    </path>
                </svg>
            </button>

            <!-- Form with Drag and Drop -->
            <form id="uploadForm" action="/upload" method="post" enctype="multipart/form-data" class="space-y-4">
                <div class="flex items-center justify-center w-full">
                    <label for="dropzone-file"
                        class="dropzone-label flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 dark:border-gray-600 border-dashed rounded-lg cursor-pointer bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 transition duration-300">
                        <div class="flex flex-col items-center justify-center pt-5 pb-6 text-center">
                            <svg class="w-10 h-10 mb-3 text-gray-400 dark:text-gray-500" fill="none"
                                stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12">
                                </path>
                            </svg>
                            <p class="mb-2 text-sm text-gray-500 dark:text-gray-400"><span class="font-semibold">Click
                                    to
                                    upload</span></p>
                            <p class="text-xs text-gray-500 dark:text-gray-400">SVG, PNG, JPG, GIF, PDF, DOC, TXT (Max.
                                10MB)</p>
                        </div>
                        <input id="dropzone-file" type="file" name="file" class="hidden" />
                    </label>
                </div>
                <p id="fileNameDisplay" class="mt-2 text-sm text-gray-600 dark:text-gray-300 hidden text-center"></p>
                <!-- Upload Button -->
                <button type="submit" id="uploadBtn"
                    class="w-full bg-blue-600 dark:bg-blue-500 text-white font-semibold py-2 rounded-lg hover:bg-blue-700 dark:hover:bg-blue-600 transition duration-300 flex items-center justify-center gap-2">

                    <!-- Default: Upload Text -->
                    <span id="uploadText" class="flex items-center gap-2">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12">
                            </path>
                        </svg>
                        Upload
                    </span>

                    <!-- Loading: Spinner + Text -->
                    <span id="uploadSpinner" class="hidden flex items-center gap-2">
                        <svg class="w-5 h-5 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4">
                            </circle>
                            <path class="opacity-75" fill="currentColor"
                                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z">
                            </path>
                        </svg>
                        <span>Uploading...</span>
                    </span>
                </button>
            </form>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>
    <script>
        // Modal Controls
        const openModalBtn = document.getElementById('openModalBtn');
        const closeModalBtn = document.getElementById('closeModalBtn');
        const uploadModal = document.getElementById('uploadModal');
        const modalContent = document.querySelector('.modal-content');

        openModalBtn.addEventListener('click', () => {
            uploadModal.classList.remove('hidden');
        });

        closeModalBtn.addEventListener('click', () => {
            uploadModal.classList.add('hidden');
        });

        uploadModal.addEventListener('click', (e) => {
            if (e.target === uploadModal) {
                uploadModal.classList.add('hidden');
            }
        });

        modalContent.addEventListener('click', (e) => {
            e.stopPropagation();
        });

        // Search Functionality
        const searchInput = document.getElementById('searchInput');
        const fileItems = document.querySelectorAll('.file-item');
        const noResultsMessage = document.getElementById('noResultsMessage');
        const noFilesMessage = document.getElementById('noFilesMessage');

        searchInput.addEventListener('input', (e) => {
            const searchTerm = e.target.value.toLowerCase().trim();
            let visibleCount = 0;

            noFilesMessage.classList.add('hidden');

            if (searchTerm === '') {
                fileItems.forEach(item => item.classList.remove('hidden'));
                noResultsMessage.classList.add('hidden');
                if (fileItems.length === 0) {
                    noFilesMessage.classList.remove('hidden');
                }
                return;
            }

            fileItems.forEach(item => {
                const filename = item.getAttribute('data-filename');
                if (filename.includes(searchTerm)) {
                    item.classList.remove('hidden');
                    visibleCount++;
                } else {
                    item.classList.add('hidden');
                }
            });

            noResultsMessage.classList.toggle('hidden', visibleCount > 0);
        });

        // Drag & Drop + File Selection Feedback
        const dropzone = document.getElementById('dropzone-file');
        const dropzoneLabel = document.querySelector('.dropzone-label');
        const fileNameDisplay = document.getElementById('fileNameDisplay');

        ['dragenter', 'dragover'].forEach(event => {
            dropzoneLabel.addEventListener(event, (e) => {
                e.preventDefault();
                dropzoneLabel.classList.add('dropzone-active');
            });
        });

        ['dragleave', 'drop'].forEach(event => {
            dropzoneLabel.addEventListener(event, (e) => {
                e.preventDefault();
                dropzoneLabel.classList.remove('dropzone-active');
            });
        });

        dropzoneLabel.addEventListener('drop', (e) => {
            e.preventDefault();
            const files = e.dataTransfer.files;
            if (files.length) {
                dropzone.files = files;
                updateFileName(files[0].name);
            }
        });

        dropzone.addEventListener('change', () => {
            if (dropzone.files[0]) {
                updateFileName(dropzone.files[0].name);
                validateFileSize(dropzone.files[0]);
            }
        });

        function updateFileName(name) {
            fileNameDisplay.textContent = `Selected: ${name}`;
            fileNameDisplay.classList.remove('hidden');
        }

        function validateFileSize(file) {
            if (file.size > 10 * 1024 * 1024) {
                alert('File must be under 10MB');
                dropzone.value = '';
                fileNameDisplay.classList.add('hidden');
            }
        }

        // Upload Loading State
        document.getElementById('uploadForm').addEventListener('submit', () => {
            document.getElementById('uploadText').classList.add('hidden');
            document.getElementById('uploadSpinner').classList.remove('hidden');
            document.getElementById('uploadBtn').disabled = true;
        });
    </script>
</body>

</html>